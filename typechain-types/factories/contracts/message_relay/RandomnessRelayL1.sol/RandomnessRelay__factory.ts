/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomnessRelay,
  RandomnessRelayInterface,
} from "../../../../contracts/message_relay/RandomnessRelayL1.sol/RandomnessRelay";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "RetryableTicketCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "requestRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subID",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Target",
        type: "address",
      },
    ],
    name: "updateL2Target",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052736168499c0cffcacd319c818142124b7a15e857ab600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507301be23585060835e02b77ef475b0cc51aa1e0709600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd89b2bf150e3b9e13446986e571fb9cab24b13cea0a43ea20a6049a85cc807cc60001b600655620186a0600760006101000a81548163ffffffff021916908363ffffffff1602179055506003600760046101000a81548161ffff021916908361ffff1602179055506002600760066101000a81548163ffffffff021916908363ffffffff1602179055503480156200014657600080fd5b50604051620011853803806200118583398181016040528101906200016c9190620003df565b3381816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a3505082600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200043b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003628262000335565b9050919050565b620003748162000355565b81146200038057600080fd5b50565b600081519050620003948162000369565b92915050565b6000620003a78262000355565b9050919050565b620003b9816200039a565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b600080600060608486031215620003fb57620003fa62000330565b5b60006200040b8682870162000383565b93505060206200041e8682870162000383565b92505060406200043186828701620003c8565b9150509250925092565b610d3a806200044b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461013c578063bf7e214f1461015a578063c2b530d614610178578063e89e106a14610196578063f6eaffc8146101b4578063fb0e722b146101e4576100a9565b806313af4035146100ae57806318e95324146100ca57806362a58fb8146100e65780637363ae1f146101045780637a9e5e4b14610120575b600080fd5b6100c860048036038101906100c39190610883565b610202565b005b6100e460048036038101906100df9190610883565b61030c565b005b6100ee610350565b6040516100fb91906108d3565b60405180910390f35b61011e60048036038101906101199190610924565b61036a565b005b61013a6004803603810190610135919061098f565b610461565b005b610144610622565b60405161015191906109cb565b60405180910390f35b610162610646565b60405161016f9190610a45565b60405180910390f35b61018061066c565b60405161018d91906109cb565b60405180910390f35b61019e610692565b6040516101ab9190610a6f565b60405180910390f35b6101ce60048036038101906101c99190610924565b610698565b6040516101db9190610a6f565b60405180910390f35b6101ec6106bc565b6040516101f99190610aab565b60405180910390f35b610230336000357fffffffff00000000000000000000000000000000000000000000000000000000166106e2565b61026f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026690610b23565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a60009054906101000a900467ffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600654600a60009054906101000a900467ffffffffffffffff16600760049054906101000a900461ffff16600760009054906101000a900463ffffffff16600760069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610419959493929190610b98565b6020604051808303816000875af1158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610c00565b905050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061057b5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b700961333306000357fffffffff00000000000000000000000000000000000000000000000000000000166040518463ffffffff1660e01b815260040161053993929190610c68565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610cd7565b5b61058457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a350565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b600881815481106106a857600080fd5b906000526020600020016000915090505481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156107c157508073ffffffffffffffffffffffffffffffffffffffff1663b70096138530866040518463ffffffff1660e01b815260040161077f93929190610c68565b602060405180830381865afa15801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c09190610cd7565b5b80610817575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085082610825565b9050919050565b61086081610845565b811461086b57600080fd5b50565b60008135905061087d81610857565b92915050565b60006020828403121561089957610898610820565b5b60006108a78482850161086e565b91505092915050565b600067ffffffffffffffff82169050919050565b6108cd816108b0565b82525050565b60006020820190506108e860008301846108c4565b92915050565b6000819050919050565b610901816108ee565b811461090c57600080fd5b50565b60008135905061091e816108f8565b92915050565b60006020828403121561093a57610939610820565b5b60006109488482850161090f565b91505092915050565b600061095c82610845565b9050919050565b61096c81610951565b811461097757600080fd5b50565b60008135905061098981610963565b92915050565b6000602082840312156109a5576109a4610820565b5b60006109b38482850161097a565b91505092915050565b6109c581610845565b82525050565b60006020820190506109e060008301846109bc565b92915050565b6000819050919050565b6000610a0b610a06610a0184610825565b6109e6565b610825565b9050919050565b6000610a1d826109f0565b9050919050565b6000610a2f82610a12565b9050919050565b610a3f81610a24565b82525050565b6000602082019050610a5a6000830184610a36565b92915050565b610a69816108ee565b82525050565b6000602082019050610a846000830184610a60565b92915050565b6000610a9582610a12565b9050919050565b610aa581610a8a565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b600082825260208201905092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b6000610b0d600c83610ac6565b9150610b1882610ad7565b602082019050919050565b60006020820190508181036000830152610b3c81610b00565b9050919050565b6000819050919050565b610b5681610b43565b82525050565b600061ffff82169050919050565b610b7381610b5c565b82525050565b600063ffffffff82169050919050565b610b9281610b79565b82525050565b600060a082019050610bad6000830188610b4d565b610bba60208301876108c4565b610bc76040830186610b6a565b610bd46060830185610b89565b610be16080830184610b89565b9695505050505050565b600081519050610bfa816108f8565b92915050565b600060208284031215610c1657610c15610820565b5b6000610c2484828501610beb565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c6281610c2d565b82525050565b6000606082019050610c7d60008301866109bc565b610c8a60208301856109bc565b610c976040830184610c59565b949350505050565b60008115159050919050565b610cb481610c9f565b8114610cbf57600080fd5b50565b600081519050610cd181610cab565b92915050565b600060208284031215610ced57610cec610820565b5b6000610cfb84828501610cc2565b9150509291505056fea26469706673582212205752e8720808d33213605af708d4174f0b0b57751c70c303368b162809b3fb0164736f6c634300080a0033";

type RandomnessRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomnessRelay__factory extends ContractFactory {
  constructor(...args: RandomnessRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _l2Target: string,
    _inbox: string,
    authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomnessRelay> {
    return super.deploy(
      _l2Target,
      _inbox,
      authority,
      overrides || {}
    ) as Promise<RandomnessRelay>;
  }
  override getDeployTransaction(
    _l2Target: string,
    _inbox: string,
    authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _l2Target,
      _inbox,
      authority,
      overrides || {}
    );
  }
  override attach(address: string): RandomnessRelay {
    return super.attach(address) as RandomnessRelay;
  }
  override connect(signer: Signer): RandomnessRelay__factory {
    return super.connect(signer) as RandomnessRelay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessRelayInterface {
    return new utils.Interface(_abi) as RandomnessRelayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomnessRelay {
    return new Contract(address, _abi, signerOrProvider) as RandomnessRelay;
  }
}
