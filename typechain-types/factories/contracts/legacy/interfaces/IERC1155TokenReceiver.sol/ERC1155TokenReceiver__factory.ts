/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ERC1155TokenReceiver,
  ERC1155TokenReceiverInterface,
} from "../../../../../contracts/legacy/interfaces/IERC1155TokenReceiver.sol/ERC1155TokenReceiver";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_operator",
        type: "address",
      },
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_ids",
        type: "uint256[]",
      },
      {
        name: "_values",
        type: "uint256[]",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        name: "",
        type: "bytes4",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_operator",
        type: "address",
      },
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_id",
        type: "uint256",
      },
      {
        name: "_value",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        name: "",
        type: "bytes4",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ERC1155TokenReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): ERC1155TokenReceiverInterface {
    return new utils.Interface(_abi) as ERC1155TokenReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155TokenReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155TokenReceiver;
  }
}
