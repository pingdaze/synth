/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiRolesAuthority,
  MultiRolesAuthorityInterface,
} from "../../../../../../@rari-capital/solmate/src/auth/authorities/MultiRolesAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "PublicCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RoleCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "authority",
        type: "address",
      },
    ],
    name: "TargetCustomAuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "UserRoleUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "doesRoleHaveCapability",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
    ],
    name: "doesUserHaveRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "getRolesWithCapability",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getTargetCustomAuthority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUserRoles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "isCapabilityPublic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setPublicCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRoleCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "customAuthority",
        type: "address",
      },
    ],
    name: "setTargetCustomAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setUserRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200193b3803806200193b833981810160405281019062000037919062000227565b8181816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a3505050506200026e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001aa826200017d565b9050919050565b620001bc816200019d565b8114620001c857600080fd5b50565b600081519050620001dc81620001b1565b92915050565b6000620001ef826200019d565b9050919050565b6200020181620001e2565b81146200020d57600080fd5b50565b6000815190506200022181620001f6565b92915050565b6000806040838503121562000241576200024062000178565b5b60006200025185828601620001cb565b9250506020620002648582860162000210565b9150509250929050565b6116bd806200027e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637a9e5e4b11610097578063c53a398511610066578063c53a39851461026e578063e688747b1461029e578063ea7ca276146102ce578063ed0d0efb146102fe576100f5565b80637a9e5e4b146101e65780638da5cb5b14610202578063b700961314610220578063bf7e214f14610250576100f5565b806313af4035116100d357806313af4035146101765780634b5159da1461019257806367aff484146101ae578063728b952b146101ca576100f5565b806306a36aee146100fa5780630bade8a41461012a5780630ea9b75b1461015a575b600080fd5b610114600480360381019061010f91906110f9565b61032e565b604051610121919061113f565b60405180910390f35b610144600480360381019061013f91906111b2565b610346565b60405161015191906111fa565b60405180910390f35b610174600480360381019061016f919061127a565b610366565b005b610190600480360381019061018b91906110f9565b610512565b005b6101ac60048036038101906101a791906112cd565b61061c565b005b6101c860048036038101906101c3919061130d565b61074d565b005b6101e460048036038101906101df919061139e565b6108cc565b005b61020060048036038101906101fb91906113de565b610a15565b005b61020a610bd6565b604051610217919061141a565b60405180910390f35b61023a60048036038101906102359190611435565b610bfa565b60405161024791906111fa565b60405180910390f35b610258610e23565b60405161026591906114e7565b60405180910390f35b610288600480360381019061028391906110f9565b610e49565b60405161029591906114e7565b60405180910390f35b6102b860048036038101906102b39190611502565b610e7c565b6040516102c591906111fa565b60405180910390f35b6102e860048036038101906102e39190611542565b610ee7565b6040516102f591906111fa565b60405180910390f35b610318600480360381019061031391906111b2565b610f40565b604051610325919061113f565b60405180910390f35b60036020528060005260406000206000915090505481565b60046020528060005260406000206000915054906101000a900460ff1681565b610394336000357fffffffff0000000000000000000000000000000000000000000000000000000016610f58565b6103d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca906115df565b60405180910390fd5b8015610447578260ff166001901b60001b60056000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600082825417925050819055506104b2565b8260ff166001901b60001b1960056000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600082825416925050819055505b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b1518360405161050591906111fa565b60405180910390a3505050565b610540336000357fffffffff0000000000000000000000000000000000000000000000000000000016610f58565b61057f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610576906115df565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350565b61064a336000357fffffffff0000000000000000000000000000000000000000000000000000000016610f58565b610689576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610680906115df565b60405180910390fd5b8060046000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede5985441038260405161074191906111fa565b60405180910390a25050565b61077b336000357fffffffff0000000000000000000000000000000000000000000000000000000016610f58565b6107ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b1906115df565b60405180910390fd5b801561081c578160ff166001901b60001b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282541792505081905550610875565b8160ff166001901b60001b19600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825416925050819055505b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf2836040516108bf91906111fa565b60405180910390a3505050565b6108fa336000357fffffffff0000000000000000000000000000000000000000000000000000000016610f58565b610939576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610930906115df565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff206560405160405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b2f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b700961333306000357fffffffff00000000000000000000000000000000000000000000000000000000166040518463ffffffff1660e01b8152600401610aed9392919061160e565b602060405180830381865afa158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e919061165a565b5b610b3857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a350565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d19578073ffffffffffffffffffffffffffffffffffffffff1663b70096138686866040518463ffffffff1660e01b8152600401610cd09392919061160e565b602060405180830381865afa158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d11919061165a565b915050610e1c565b60046000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1680610e18575060056000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002054600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054166000801b14155b9150505b9392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060018460ff1660056000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460001c901c161415905092915050565b60008060018360ff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460001c901c161415905092915050565b60056020528060005260406000206000915090505481565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561103757508073ffffffffffffffffffffffffffffffffffffffff1663b70096138530866040518463ffffffff1660e01b8152600401610ff59392919061160e565b602060405180830381865afa158015611012573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611036919061165a565b5b8061108d575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110c68261109b565b9050919050565b6110d6816110bb565b81146110e157600080fd5b50565b6000813590506110f3816110cd565b92915050565b60006020828403121561110f5761110e611096565b5b600061111d848285016110e4565b91505092915050565b6000819050919050565b61113981611126565b82525050565b60006020820190506111546000830184611130565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61118f8161115a565b811461119a57600080fd5b50565b6000813590506111ac81611186565b92915050565b6000602082840312156111c8576111c7611096565b5b60006111d68482850161119d565b91505092915050565b60008115159050919050565b6111f4816111df565b82525050565b600060208201905061120f60008301846111eb565b92915050565b600060ff82169050919050565b61122b81611215565b811461123657600080fd5b50565b60008135905061124881611222565b92915050565b611257816111df565b811461126257600080fd5b50565b6000813590506112748161124e565b92915050565b60008060006060848603121561129357611292611096565b5b60006112a186828701611239565b93505060206112b28682870161119d565b92505060406112c386828701611265565b9150509250925092565b600080604083850312156112e4576112e3611096565b5b60006112f28582860161119d565b925050602061130385828601611265565b9150509250929050565b60008060006060848603121561132657611325611096565b5b6000611334868287016110e4565b935050602061134586828701611239565b925050604061135686828701611265565b9150509250925092565b600061136b826110bb565b9050919050565b61137b81611360565b811461138657600080fd5b50565b60008135905061139881611372565b92915050565b600080604083850312156113b5576113b4611096565b5b60006113c3858286016110e4565b92505060206113d485828601611389565b9150509250929050565b6000602082840312156113f4576113f3611096565b5b600061140284828501611389565b91505092915050565b611414816110bb565b82525050565b600060208201905061142f600083018461140b565b92915050565b60008060006060848603121561144e5761144d611096565b5b600061145c868287016110e4565b935050602061146d868287016110e4565b925050604061147e8682870161119d565b9150509250925092565b6000819050919050565b60006114ad6114a86114a38461109b565b611488565b61109b565b9050919050565b60006114bf82611492565b9050919050565b60006114d1826114b4565b9050919050565b6114e1816114c6565b82525050565b60006020820190506114fc60008301846114d8565b92915050565b6000806040838503121561151957611518611096565b5b600061152785828601611239565b92505060206115388582860161119d565b9150509250929050565b6000806040838503121561155957611558611096565b5b6000611567858286016110e4565b925050602061157885828601611239565b9150509250929050565b600082825260208201905092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b60006115c9600c83611582565b91506115d482611593565b602082019050919050565b600060208201905081810360008301526115f8816115bc565b9050919050565b6116088161115a565b82525050565b6000606082019050611623600083018661140b565b611630602083018561140b565b61163d60408301846115ff565b949350505050565b6000815190506116548161124e565b92915050565b6000602082840312156116705761166f611096565b5b600061167e84828501611645565b9150509291505056fea26469706673582212208af69c57885e1ff7b19a5fff93b2e18d67206e7ec929fbae35444de0c70a6db564736f6c634300080a0033";

type MultiRolesAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiRolesAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiRolesAuthority__factory extends ContractFactory {
  constructor(...args: MultiRolesAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiRolesAuthority> {
    return super.deploy(
      _owner,
      _authority,
      overrides || {}
    ) as Promise<MultiRolesAuthority>;
  }
  override getDeployTransaction(
    _owner: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _authority, overrides || {});
  }
  override attach(address: string): MultiRolesAuthority {
    return super.attach(address) as MultiRolesAuthority;
  }
  override connect(signer: Signer): MultiRolesAuthority__factory {
    return super.connect(signer) as MultiRolesAuthority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiRolesAuthorityInterface {
    return new utils.Interface(_abi) as MultiRolesAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiRolesAuthority {
    return new Contract(address, _abi, signerOrProvider) as MultiRolesAuthority;
  }
}
