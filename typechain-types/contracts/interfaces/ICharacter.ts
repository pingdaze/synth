/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export type CharacterStruct = {
  characterId: BigNumberish;
  player: string;
  faction: BigNumberish;
  class: BigNumberish;
  pillboosts: string[];
  attributes: BigNumberish[];
  traitsPlus: string[];
};

export type CharacterStructOutput = [
  BigNumber,
  string,
  BigNumber,
  BigNumber,
  string[],
  BigNumber[],
  string[]
] & {
  characterId: BigNumber;
  player: string;
  faction: BigNumber;
  class: BigNumber;
  pillboosts: string[];
  attributes: BigNumber[];
  traitsPlus: string[];
};

export type OutfitStruct = {
  head: BigNumberish;
  torso: BigNumberish;
  lArm: BigNumberish;
  rArm: BigNumberish;
  rLeg: BigNumberish;
  lLeg: BigNumberish;
  floating: BigNumberish;
};

export type OutfitStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  head: BigNumber;
  torso: BigNumber;
  lArm: BigNumber;
  rArm: BigNumber;
  rLeg: BigNumber;
  lLeg: BigNumber;
  floating: BigNumber;
};

export type SkeletonStruct = {
  head: BigNumberish;
  mouth: BigNumberish;
  eyes: BigNumberish;
  torso: BigNumberish;
  lArm: BigNumberish;
  rArm: BigNumberish;
  rLeg: BigNumberish;
  lLeg: BigNumberish;
  color: BigNumberish;
  marking: BigNumberish;
  mask: BigNumberish;
};

export type SkeletonStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  head: BigNumber;
  mouth: BigNumber;
  eyes: BigNumber;
  torso: BigNumber;
  lArm: BigNumber;
  rArm: BigNumber;
  rLeg: BigNumber;
  lLeg: BigNumber;
  color: BigNumber;
  marking: BigNumber;
  mask: BigNumber;
};

export interface ICharacterInterface extends utils.Interface {
  functions: {
    "addPlayer(uint256,address,address[],string[])": FunctionFragment;
    "equipOutfit(uint8,uint256,address)": FunctionFragment;
    "equipSkeleton(uint8,uint256,address)": FunctionFragment;
    "getCharacter(uint256)": FunctionFragment;
    "getOutfit(uint256)": FunctionFragment;
    "getSkeleton(uint256)": FunctionFragment;
    "removePlayer(uint256,address)": FunctionFragment;
    "setOutfit(uint256,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
    "setSkeleton(uint256,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
    "unequipOutfit(uint8,address)": FunctionFragment;
    "unequipSkeleton(uint8,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addPlayer"
      | "equipOutfit"
      | "equipSkeleton"
      | "getCharacter"
      | "getOutfit"
      | "getSkeleton"
      | "removePlayer"
      | "setOutfit"
      | "setSkeleton"
      | "unequipOutfit"
      | "unequipSkeleton"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addPlayer",
    values: [BigNumberish, string, string[], string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "equipOutfit",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "equipSkeleton",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCharacter",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOutfit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSkeleton",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removePlayer",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setOutfit",
    values: [BigNumberish, OutfitStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setSkeleton",
    values: [BigNumberish, SkeletonStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "unequipOutfit",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "unequipSkeleton",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "addPlayer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "equipOutfit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "equipSkeleton",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCharacter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOutfit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getSkeleton",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removePlayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setOutfit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setSkeleton",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unequipOutfit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unequipSkeleton",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ICharacter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ICharacterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addPlayer(
      _id: BigNumberish,
      _player: string,
      pillboosts: string[],
      traitsPlus: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    equipOutfit(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    equipSkeleton(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getCharacter(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[CharacterStructOutput]>;

    getOutfit(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[OutfitStructOutput]>;

    getSkeleton(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[SkeletonStructOutput]>;

    removePlayer(
      _id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOutfit(
      tokenID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSkeleton(
      tokenID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unequipOutfit(
      slotID: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unequipSkeleton(
      slotID: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addPlayer(
    _id: BigNumberish,
    _player: string,
    pillboosts: string[],
    traitsPlus: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  equipOutfit(
    slotID: BigNumberish,
    id: BigNumberish,
    _player: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  equipSkeleton(
    slotID: BigNumberish,
    id: BigNumberish,
    _player: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getCharacter(
    tokenID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<CharacterStructOutput>;

  getOutfit(
    tokenID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<OutfitStructOutput>;

  getSkeleton(
    tokenID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<SkeletonStructOutput>;

  removePlayer(
    _id: BigNumberish,
    _player: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOutfit(
    tokenID: BigNumberish,
    outfit: OutfitStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSkeleton(
    tokenID: BigNumberish,
    skeleton: SkeletonStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unequipOutfit(
    slotID: BigNumberish,
    _player: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unequipSkeleton(
    slotID: BigNumberish,
    _player: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addPlayer(
      _id: BigNumberish,
      _player: string,
      pillboosts: string[],
      traitsPlus: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    equipOutfit(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: CallOverrides
    ): Promise<void>;

    equipSkeleton(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getCharacter(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<CharacterStructOutput>;

    getOutfit(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<OutfitStructOutput>;

    getSkeleton(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<SkeletonStructOutput>;

    removePlayer(
      _id: BigNumberish,
      _player: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setOutfit(
      tokenID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setSkeleton(
      tokenID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    unequipOutfit(
      slotID: BigNumberish,
      _player: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unequipSkeleton(
      slotID: BigNumberish,
      _player: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addPlayer(
      _id: BigNumberish,
      _player: string,
      pillboosts: string[],
      traitsPlus: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    equipOutfit(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    equipSkeleton(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getCharacter(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOutfit(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSkeleton(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removePlayer(
      _id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOutfit(
      tokenID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSkeleton(
      tokenID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unequipOutfit(
      slotID: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unequipSkeleton(
      slotID: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addPlayer(
      _id: BigNumberish,
      _player: string,
      pillboosts: string[],
      traitsPlus: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    equipOutfit(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    equipSkeleton(
      slotID: BigNumberish,
      id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getCharacter(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOutfit(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSkeleton(
      tokenID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removePlayer(
      _id: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOutfit(
      tokenID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSkeleton(
      tokenID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unequipOutfit(
      slotID: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unequipSkeleton(
      slotID: BigNumberish,
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
