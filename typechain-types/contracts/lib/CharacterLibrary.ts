/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export type OutfitStruct = {
  head: BigNumberish;
  torso: BigNumberish;
  lArm: BigNumberish;
  rArm: BigNumberish;
  rLeg: BigNumberish;
  lLeg: BigNumberish;
  floating: BigNumberish;
};

export type OutfitStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  head: BigNumber;
  torso: BigNumber;
  lArm: BigNumber;
  rArm: BigNumber;
  rLeg: BigNumber;
  lLeg: BigNumber;
  floating: BigNumber;
};

export type SkeletonStruct = {
  head: BigNumberish;
  mouth: BigNumberish;
  eyes: BigNumberish;
  torso: BigNumberish;
  lArm: BigNumberish;
  rArm: BigNumberish;
  rLeg: BigNumberish;
  lLeg: BigNumberish;
  color: BigNumberish;
  marking: BigNumberish;
  mask: BigNumberish;
};

export type SkeletonStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  head: BigNumber;
  mouth: BigNumber;
  eyes: BigNumber;
  torso: BigNumber;
  lArm: BigNumber;
  rArm: BigNumber;
  rLeg: BigNumber;
  lLeg: BigNumber;
  color: BigNumber;
  marking: BigNumber;
  mask: BigNumber;
};

export interface CharacterLibraryInterface extends utils.Interface {
  functions: {
    "MAX_INT()": FunctionFragment;
    "getOutfitSlot(uint256,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
    "getSkeletonSlot(uint256,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "MAX_INT" | "getOutfitSlot" | "getSkeletonSlot"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "MAX_INT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getOutfitSlot",
    values: [BigNumberish, OutfitStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getSkeletonSlot",
    values: [BigNumberish, SkeletonStruct]
  ): string;

  decodeFunctionResult(functionFragment: "MAX_INT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getOutfitSlot",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSkeletonSlot",
    data: BytesLike
  ): Result;

  events: {};
}

export interface CharacterLibrary extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CharacterLibraryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MAX_INT(overrides?: CallOverrides): Promise<[BigNumber]>;

    getOutfitSlot(
      slotID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getSkeletonSlot(
      slotID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  MAX_INT(overrides?: CallOverrides): Promise<BigNumber>;

  getOutfitSlot(
    slotID: BigNumberish,
    outfit: OutfitStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getSkeletonSlot(
    slotID: BigNumberish,
    skeleton: SkeletonStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    MAX_INT(overrides?: CallOverrides): Promise<BigNumber>;

    getOutfitSlot(
      slotID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSkeletonSlot(
      slotID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    MAX_INT(overrides?: CallOverrides): Promise<BigNumber>;

    getOutfitSlot(
      slotID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSkeletonSlot(
      slotID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAX_INT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getOutfitSlot(
      slotID: BigNumberish,
      outfit: OutfitStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSkeletonSlot(
      slotID: BigNumberish,
      skeleton: SkeletonStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
