/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface__factory>;
    getContractFactory(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBaseV2__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Auth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth__factory>;
    getContractFactory(
      name: "Authority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authority__factory>;
    getContractFactory(
      name: "MultiRolesAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiRolesAuthority__factory>;
    getContractFactory(
      name: "RolesAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RolesAuthority__factory>;
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "VRFv2SubscriptionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFv2SubscriptionManager__factory>;
    getContractFactory(
      name: "VRFConsumerBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBase__factory>;
    getContractFactory(
      name: "VRFConsumerLite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerLite__factory>;
    getContractFactory(
      name: "VRFRequester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFRequester__factory>;
    getContractFactory(
      name: "VRFRequesterL1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFRequesterL1__factory>;
    getContractFactory(
      name: "Attributes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Attributes__factory>;
    getContractFactory(
      name: "IAttribute",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAttribute__factory>;
    getContractFactory(
      name: "ITrait",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITrait__factory>;
    getContractFactory(
      name: "Level",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Level__factory>;
    getContractFactory(
      name: "Characters",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Characters__factory>;
    getContractFactory(
      name: "IToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IToken__factory>;
    getContractFactory(
      name: "SelectableOptions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SelectableOptions__factory>;
    getContractFactory(
      name: "Core1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Core1155__factory>;
    getContractFactory(
      name: "Core721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Core721__factory>;
    getContractFactory(
      name: "CharacterXfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CharacterXfer__factory>;
    getContractFactory(
      name: "IAchievement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAchievement__factory>;
    getContractFactory(
      name: "IAttribute",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAttribute__factory>;
    getContractFactory(
      name: "IAugments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAugments__factory>;
    getContractFactory(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridge__factory>;
    getContractFactory(
      name: "ICharacter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICharacter__factory>;
    getContractFactory(
      name: "ICore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICore__factory>;
    getContractFactory(
      name: "IERC677Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC677Receiver__factory>;
    getContractFactory(
      name: "IEXP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEXP__factory>;
    getContractFactory(
      name: "IFabricator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFabricator__factory>;
    getContractFactory(
      name: "IFabricator721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFabricator721__factory>;
    getContractFactory(
      name: "IInbox",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInbox__factory>;
    getContractFactory(
      name: "IMessageProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageProvider__factory>;
    getContractFactory(
      name: "IMintPipe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintPipe__factory>;
    getContractFactory(
      name: "IMintValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintValidator__factory>;
    getContractFactory(
      name: "IMintValidator721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintValidator721__factory>;
    getContractFactory(
      name: "IOutbox",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOutbox__factory>;
    getContractFactory(
      name: "IREP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IREP__factory>;
    getContractFactory(
      name: "IWearables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWearables__factory>;
    getContractFactory(
      name: "IXferHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXferHook__factory>;
    getContractFactory(
      name: "CheckerValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheckerValidator__factory>;
    getContractFactory(
      name: "Collectible",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Collectible__factory>;
    getContractFactory(
      name: "Core",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Core__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155MixedFungible",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MixedFungible__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "ERC1155TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155TokenReceiver__factory>;
    getContractFactory(
      name: "PaymentValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentValidator__factory>;
    getContractFactory(
      name: "CharacterLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CharacterLibrary__factory>;
    getContractFactory(
      name: "RandomnessRelay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomnessRelay__factory>;
    getContractFactory(
      name: "RandomnessRelayL2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomnessRelayL2__factory>;
    getContractFactory(
      name: "IReadMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReadMetadata__factory>;
    getContractFactory(
      name: "MetadataRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetadataRegistry__factory>;
    getContractFactory(
      name: "CharacterGenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CharacterGenMock__factory>;
    getContractFactory(
      name: "LinkMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkMock__factory>;
    getContractFactory(
      name: "MetaDataStringMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetaDataStringMock__factory>;
    getContractFactory(
      name: "ValidatorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ValidatorMock__factory>;
    getContractFactory(
      name: "VRFCoordinatorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorMock__factory>;
    getContractFactory(
      name: "Basic1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Basic1155__factory>;
    getContractFactory(
      name: "BasicValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicValidator__factory>;
    getContractFactory(
      name: "CollectibleHolder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectibleHolder__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721TokenReceiver__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "AggregateValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregateValidator__factory>;
    getContractFactory(
      name: "AuctionValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuctionValidator__factory>;
    getContractFactory(
      name: "AugmentsValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AugmentsValidator__factory>;
    getContractFactory(
      name: "BoosterValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoosterValidator__factory>;
    getContractFactory(
      name: "CharacterValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CharacterValidator__factory>;
    getContractFactory(
      name: "CheckerValidatorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheckerValidatorV2__factory>;
    getContractFactory(
      name: "MerkleValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleValidator__factory>;
    getContractFactory(
      name: "PaymentValidatorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentValidatorV2__factory>;
    getContractFactory(
      name: "RaffleValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RaffleValidator__factory>;
    getContractFactory(
      name: "SequenceValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SequenceValidator__factory>;
    getContractFactory(
      name: "SignatureValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureValidator__factory>;
    getContractFactory(
      name: "WearablesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WearablesValidator__factory>;

    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "VRFCoordinatorV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    getContractAt(
      name: "VRFConsumerBaseV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBaseV2>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Auth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Auth>;
    getContractAt(
      name: "Authority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authority>;
    getContractAt(
      name: "MultiRolesAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiRolesAuthority>;
    getContractAt(
      name: "RolesAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RolesAuthority>;
    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "VRFv2SubscriptionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFv2SubscriptionManager>;
    getContractAt(
      name: "VRFConsumerBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBase>;
    getContractAt(
      name: "VRFConsumerLite",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerLite>;
    getContractAt(
      name: "VRFRequester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFRequester>;
    getContractAt(
      name: "VRFRequesterL1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFRequesterL1>;
    getContractAt(
      name: "Attributes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Attributes>;
    getContractAt(
      name: "IAttribute",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAttribute>;
    getContractAt(
      name: "ITrait",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITrait>;
    getContractAt(
      name: "Level",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Level>;
    getContractAt(
      name: "Characters",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Characters>;
    getContractAt(
      name: "IToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IToken>;
    getContractAt(
      name: "SelectableOptions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SelectableOptions>;
    getContractAt(
      name: "Core1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Core1155>;
    getContractAt(
      name: "Core721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Core721>;
    getContractAt(
      name: "CharacterXfer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CharacterXfer>;
    getContractAt(
      name: "IAchievement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAchievement>;
    getContractAt(
      name: "IAttribute",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAttribute>;
    getContractAt(
      name: "IAugments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAugments>;
    getContractAt(
      name: "IBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBridge>;
    getContractAt(
      name: "ICharacter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICharacter>;
    getContractAt(
      name: "ICore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICore>;
    getContractAt(
      name: "IERC677Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC677Receiver>;
    getContractAt(
      name: "IEXP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEXP>;
    getContractAt(
      name: "IFabricator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFabricator>;
    getContractAt(
      name: "IFabricator721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFabricator721>;
    getContractAt(
      name: "IInbox",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInbox>;
    getContractAt(
      name: "IMessageProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageProvider>;
    getContractAt(
      name: "IMintPipe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintPipe>;
    getContractAt(
      name: "IMintValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintValidator>;
    getContractAt(
      name: "IMintValidator721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintValidator721>;
    getContractAt(
      name: "IOutbox",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOutbox>;
    getContractAt(
      name: "IREP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IREP>;
    getContractAt(
      name: "IWearables",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWearables>;
    getContractAt(
      name: "IXferHook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IXferHook>;
    getContractAt(
      name: "CheckerValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheckerValidator>;
    getContractAt(
      name: "Collectible",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Collectible>;
    getContractAt(
      name: "Core",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Core>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155MixedFungible",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MixedFungible>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "ERC1155TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155TokenReceiver>;
    getContractAt(
      name: "PaymentValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentValidator>;
    getContractAt(
      name: "CharacterLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CharacterLibrary>;
    getContractAt(
      name: "RandomnessRelay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomnessRelay>;
    getContractAt(
      name: "RandomnessRelayL2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomnessRelayL2>;
    getContractAt(
      name: "IReadMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReadMetadata>;
    getContractAt(
      name: "MetadataRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MetadataRegistry>;
    getContractAt(
      name: "CharacterGenMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CharacterGenMock>;
    getContractAt(
      name: "LinkMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkMock>;
    getContractAt(
      name: "MetaDataStringMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MetaDataStringMock>;
    getContractAt(
      name: "ValidatorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ValidatorMock>;
    getContractAt(
      name: "VRFCoordinatorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorMock>;
    getContractAt(
      name: "Basic1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Basic1155>;
    getContractAt(
      name: "BasicValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicValidator>;
    getContractAt(
      name: "CollectibleHolder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectibleHolder>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721TokenReceiver>;
    getContractAt(
      name: "ERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "AggregateValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregateValidator>;
    getContractAt(
      name: "AuctionValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuctionValidator>;
    getContractAt(
      name: "AugmentsValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AugmentsValidator>;
    getContractAt(
      name: "BoosterValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoosterValidator>;
    getContractAt(
      name: "CharacterValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CharacterValidator>;
    getContractAt(
      name: "CheckerValidatorV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheckerValidatorV2>;
    getContractAt(
      name: "MerkleValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleValidator>;
    getContractAt(
      name: "PaymentValidatorV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentValidatorV2>;
    getContractAt(
      name: "RaffleValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RaffleValidator>;
    getContractAt(
      name: "SequenceValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SequenceValidator>;
    getContractAt(
      name: "SignatureValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureValidator>;
    getContractAt(
      name: "WearablesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WearablesValidator>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
